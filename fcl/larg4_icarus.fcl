#include "seedservice.fcl"
#include "larproperties.fcl"
#include "magfield_larsoft.fcl"

#include "largeantmodules.fcl"
#include "mcreco.fcl"

process_name: GEANT4

icarus_g4_services:
{

  ExptGeoHelperInterface:
  { 
    service_provider : StandardGeometryHelper
  }

  Geometry:
  {
    SurfaceY:        6.9e2                           #in cm, vertical distance to the surface
    Name:            "icarus"
    GDML:            "icarus.gdml"
    ROOT:            "icarus.gdml"
    DisableWiresInG4: true                           # Whether to use wirefree geometry in LArG4
                                                     #  As per Brians request, wire free file is specified by
                                                     #  [GDMLFileName]_nowires.gdml
  }
  LArSeedService: @local::random_seedservice #use provided seeed service


  DetectorPropertiesService:
  {
    service_provider: "DetectorPropertiesServiceStandard"

    # Drift properties 
    Temperature:      91                #Kelvin
    Efield:           [0.5,0.66,0.8 ]   #kV/cm to first,second,third wire planes
    Electronlifetime: 9000               #microseconds
 
    SternheimerA:     0.1956  # Ar Sternheimer parameter a.
    SternheimerK:     3.0000  # Ar Sternheimer parameter k.
    SternheimerX0:    0.2000  # Ar Sternheimer parameter x0.
    SternheimerX1:    3.0000  # Ar Sternheimer parameter x0.
    SternheimerCbar:  5.2146  # Ar Sternheimer parameter Cbar.
 
    ElectronsToADC:    1.208041e-3  # in ADC/e; 6241.5 electrons = 1fC
    NumberTimeSamples: 4096         # ticks of the clock per readout frame
    ReadOutWindowSize: 4096
    TimeOffsetU:       -5.193       # relative time offsets in ticks between planes
    TimeOffsetV:       0.585        # relative time offsets in ticks between planes
    TimeOffsetZ:       0            # relative time offsets in ticks between planes

  }

  LArPropertiesService:  @local::standard_properties

  #assuming not much in optical here.
  LArG4Parameters:
  {

    OpticalSimVerbosity:      0       #verbosity of optical simulation, soon to be depricated
    ParticleKineticEnergyCut: 0.01e-3  #in GeV
    StoreTrajectories:        true

    VisualizationEnergyCut:   10.e-3  #in GeV
    VisualizeNeutrals:        false

    UseCustomPhysics:         false   #Whether to use a custom list of physics processes or the default
    EnabledPhysics:           [ "Em", "SynchrotronAndGN", "Ion", "Hadron", 
                                "Decay", "HadronElastic", "Stopping" ] #, "NeutronTrackingCut" ]
    KeepEMShowerDaughters:    true   #save secondary, tertiary, etc particles in EM showers

    LongitudinalDiffusion:    6.2e-9  #in cm^2/ns
    TransverseDiffusion:      16.3e-9 #in cm^2/ns
    ElectronClusterSize:      600.0   #number of ionization electrons to drift in a unit
    MinNumberOfElCluster:     0       #minimum number of electron clusters
    UseModBoxRecomb:          true  # use Modified Box recombination instead of Birks

    CosmogenicK0Bias:         0     # 0 is off. N is the number of secondaries to produce.
    CosmogenicXSMNBiasOn:     0     # 0 is off. 1 works. 2 still in development.
    CosmogenicXSMNBiasFactor: 1     # Not more than 5-ish cuz of numerical instabilities.
    DisableWireplanes:        false # if set true, charge drift simulation does not run - used for optical sim jobs
    			            # OR just when you don't wanna drift the e's.
    SkipWireSignalInTPCs:     []    # put here TPC id's which should not receive ionization electrons -
    			            # used to simulate TPC geom volumes which are actually dead LAr volumes in protoDUNE

    # The following parameters specify details of wireplanes or similar
    #  areas with optically parameterized transmissions (Ben J 2013)

    #  volume names to be associated with an optical wireplane model
    OpticalParamVolumes:      ["volTPCPlaneVert_PV"]

    #  specification of which model to use for each volume
    OpticalParamModels:       ["OverlaidWireplanes"]

    # orientation of each wireplane set
    #  0 = Xdrift, 1 = Ydrift, 2 = Zdrift
    OpticalParamOrientations: [0]

    # This a set of floats which is specific to the particular model used.
    # For overlaid wireplanes, should be a vector of vectors of 
    #                                 [plane angle, pitch/mm, wire diameter/mm]
    #
    # This format is chosen to allow for future extensions to the model
    #  for, eg, DUNE wireplane development.
    #
    OpticalParamParameters:   [ [ [ 60,  3, 0.15 ], 
                               	  [ -60, 3, 0.15 ],
                               	  [ 0,   3, 0.15 ] ] ]       
    UseLitePhotons: false 


  }

  LArVoxelCalculator:
  {
    VoxelSizeX:     0.03    #in cm
    VoxelSizeY:     0.03    #in cm
    VoxelSizeZ:     0.03    #in cm
    VoxelSizeT:     5000.0  #in ns
    VoxelOffsetX:   0.0     #in cm
    VoxelOffsetY:   0.0     #in cm
    VoxelOffsetZ:   0.0     #in cm
    VoxelOffsetT:   -2500.0 #in ns
    VoxelEnergyCut: 1.e-6   #in GeV
  }

  #DatabaseUtil:                   @local::microboone_database

  DetectorClocksService:
  {
    service_provider: "DetectorClocksServiceStandard"
  
    TrigModuleName:    ""
    InheritClockConfig: true
    G4RefTime:         0       # G4 time [us] where electronics clock counting start
    TriggerOffsetTPC:  0       # Time offset for TPC readout start time w.r.t. trigger [us]
    FramePeriod:       1638.4  # Frame period [us]; 4096 * 400 ns
    ClockSpeedTPC:     1.5     # TPC clock speed in MHz;
    ClockSpeedOptical: 500     # Optical clock speed in MHz
    ClockSpeedTrigger: 16      # Trigger clock speed in MHz
    ClockSpeedExternal:31.25   # External clock speed in MHz
    DefaultTrigTime:   0       # Default trigger time in electronics clock [us]
    DefaultBeamTime:   0       # Default beam gate time in electronics clock [us]
  }

  MagneticField: @local::no_mag_larsoft

  SpaceCharge:
  {
    service_provider:       SpaceChargeServiceStandard

    EnableSimSpatialSCE:    false
    EnableSimEfieldSCE:    false
    EnableCorrSCE:   false
    RepresentationType:     "Parametric"
    InputFilename:          "SCEoffsets.root"
  }
  
}

services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.

  # Load the service that manages root files for histograms.
  TFileService: { fileName: "larg4_hist_icarus.root" }

  TimeTracker:  {}
  MemoryTracker:     { ignoreTotal: 1 } # default is one

  RandomNumberGenerator: {} #ART native random number generator
  #FileCatalogMetadata:  @local::art_file_catalog_mc

  # Insert LArSoft services ...
  @table::icarus_g4_services
}

#Start each new event with an empty event.
source:
{
  module_type:     RootInput    # assuming generated file as input
  maxEvents:       10           # Number of events to create
  saveMemoryObjectThreshold: 0  # magic to keep memory usage down?
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   largeant: @local::standard_largeant   #defined in largeantmodules.fcl
   mcreco:   @local::standard_mcreco     #defined in mcreco, needs largeant as input
   rns:       { module_type: "RandomNumberSaver" }
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ rns, largeant, mcreco ]

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "larg4_icarus.root"
   dataTier:    "simulated"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
 }
}

#override to save more mc particles
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,
                                                      1000010020,1000010030,1000020030,1000020040]
