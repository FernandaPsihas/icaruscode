#include "seedservice.fcl"
#include "larproperties.fcl"
#include "magfield_larsoft.fcl"

#include "largeantmodules.fcl"
#include "mcreco.fcl"

#include "detsimmodules.fcl"
#include "databaseutil.fcl"
#include "larfft.fcl"
#include "backtracker.fcl"

#include "channelstatus.fcl"
#include "database_standard.fcl"

#include "messageservice.fcl"

BEGIN_PROLOG

standard_largeantparameters:
{
  OpticalSimVerbosity:      0       #verbosity of optical simulation, soon to be depricated
  ParticleKineticEnergyCut: 0.01e-3  #in GeV
  StoreTrajectories:        true
  VisualizationEnergyCut:   10.e-3  #depricated, in GeV
  VisualizeNeutrals:        false   #depricated
  UseCustomPhysics:         false   #Whether to use a custom list of physics processes or the default
  KeepEMShowerDaughters:    false   #save secondary, tertiary, etc particles in EM showers
  LongitudinalDiffusion:    6.2e-9  #in cm^2/ns
  TransverseDiffusion:      16.3e-9 #in cm^2/ns
  ElectronClusterSize:      600.0   #number of ionization electrons to drift in a unit
  MinNumberOfElCluster:     0       #minimum number of electron clusters
  EnabledPhysics:           [ "Em", "SynchrotronAndGN", "Ion", "Hadron",
                              "Decay", "HadronElastic", "Stopping", "NeutronTrackingCut" ]
  CosmogenicK0Bias:         0 # 0 is off. N is the number of secondaries to produce.
  CosmogenicXSMNBiasOn:     0 # 0 is off. 1 works. 2 still in development.
  CosmogenicXSMNBiasFactor: 1 # Not more than 5-ish cuz of numerical instabilities.
  DisableWireplanes:        false #if set true, charge drift simulation does not run - used for optical sim jobs OR just when you don't wanna drift the e's.
  SkipWireSignalInTPCs:     []     # put here TPC id's which should not receive ionization electrons - used to simulate TPC geom volumes which are actually dead LAr volumes in protoDUNE
  UseModBoxRecomb:          true   # use Modified Box recombination instead of Birks

  # The following parameters specify details of wireplanes or similar
  #  areas with optically parameterized transmissions (Ben J 2013)
  #  volume names to be associated with an optical wireplane model
  OpticalParamVolumes:      ["volTPCPlaneVert_PV"]

  #  specification of which model to use for each volume
  OpticalParamModels:       ["OverlaidWireplanes"]

  # orientation of each wireplane set
  #  0 = Xdrift, 1 = Ydrift, 2 = Zdrift
  OpticalParamOrientations: [0]

  # This a set of floats which is specific to the particular model used.
  # For overlaid wireplanes, should be a vector of vectors of
  #                                 [plane angle, pitch/mm, wire diameter/mm]
  #
  # This format is chosen to allow for future extensions to the model
  #  for, eg, DUNE wireplane development.
  #
  OpticalParamParameters:   [ [ [60,  3, 0.15],
                              [-60, 3, 0.15],
                              [0,   3, 0.15] ] ]      
  UseLitePhotons: false
} 

icarus_g4_services:
{

  ExptGeoHelperInterface:
  { 
    service_provider : StandardGeometryHelper
  }

  Geometry:
  {
    SurfaceY:        6.9e2                           #in cm, vertical distance to the surface
    Name:            "icarus"
    GDML:            "double.gdml"
    ROOT:            "double_nowires.gdml"
    DisableWiresInG4: true                           # Whether to use wirefree geometry in LArG4
                                                     #  As per Brians request, wire free file is specified by
                                                     #  [GDMLFileName]_nowires.gdml
  }
  #LArSeedService: @local::random_seedservice #use provided seeed service
  NuRandomService:                    @local::random_NuRandomService


  DetectorPropertiesService:
  {
    service_provider: "DetectorPropertiesServiceStandard"

    # Drift properties 
    Temperature:      91                #Kelvin
    Efield:           [0.5,0.66,0.8 ]   #kV/cm to first,second,third wire planes
    Electronlifetime: 9000               #microseconds
 
    SternheimerA:     0.1956  # Ar Sternheimer parameter a.
    SternheimerK:     3.0000  # Ar Sternheimer parameter k.
    SternheimerX0:    0.2000  # Ar Sternheimer parameter x0.
    SternheimerX1:    3.0000  # Ar Sternheimer parameter x0.
    SternheimerCbar:  5.2146  # Ar Sternheimer parameter Cbar.
 
    ElectronsToADC:    1.208041e-3  # in ADC/e; 6241.5 electrons = 1fC
    NumberTimeSamples: 4096         # ticks of the clock per readout frame
    ReadOutWindowSize: 4096
    TimeOffsetU:       -5.193       # relative time offsets in ticks between planes
    TimeOffsetV:       0.585        # relative time offsets in ticks between planes
    TimeOffsetZ:       0            # relative time offsets in ticks between planes

  }

  LArPropertiesService:  @local::standard_properties

  #assuming not much in optical here.
  LArG4Parameters:
  {

    OpticalSimVerbosity:      0       #verbosity of optical simulation, soon to be depricated
    ParticleKineticEnergyCut: 0.01e-3  #in GeV
    StoreTrajectories:        true

    VisualizationEnergyCut:   10.e-3  #in GeV
    VisualizeNeutrals:        false

    UseCustomPhysics:         false   #Whether to use a custom list of physics processes or the default
    EnabledPhysics:           [ "Em", "SynchrotronAndGN", "Ion", "Hadron", 
                                "Decay", "HadronElastic", "Stopping" ] #, "NeutronTrackingCut" ]
    KeepEMShowerDaughters:    true   #save secondary, tertiary, etc particles in EM showers

    LongitudinalDiffusion:    6.2e-9  #in cm^2/ns
    TransverseDiffusion:      16.3e-9 #in cm^2/ns
    ElectronClusterSize:      600.0   #number of ionization electrons to drift in a unit
    MinNumberOfElCluster:     0       #minimum number of electron clusters
    UseModBoxRecomb:          true  # use Modified Box recombination instead of Birks

    CosmogenicK0Bias:         0     # 0 is off. N is the number of secondaries to produce.
    CosmogenicXSMNBiasOn:     0     # 0 is off. 1 works. 2 still in development.
    CosmogenicXSMNBiasFactor: 1     # Not more than 5-ish cuz of numerical instabilities.
    DisableWireplanes:        false # if set true, charge drift simulation does not run - used for optical sim jobs
    			            # OR just when you don't wanna drift the e's.
    SkipWireSignalInTPCs:     []    # put here TPC id's which should not receive ionization electrons -
    			            # used to simulate TPC geom volumes which are actually dead LAr volumes in protoDUNE

    # The following parameters specify details of wireplanes or similar
    #  areas with optically parameterized transmissions (Ben J 2013)

    #  volume names to be associated with an optical wireplane model
    OpticalParamVolumes:      ["volTPCPlaneVert_PV"]

    #  specification of which model to use for each volume
    OpticalParamModels:       ["OverlaidWireplanes"]

    # orientation of each wireplane set
    #  0 = Xdrift, 1 = Ydrift, 2 = Zdrift
    OpticalParamOrientations: [0]

    # This a set of floats which is specific to the particular model used.
    # For overlaid wireplanes, should be a vector of vectors of 
    #                                 [plane angle, pitch/mm, wire diameter/mm]
    #
    # This format is chosen to allow for future extensions to the model
    #  for, eg, DUNE wireplane development.
    #
    OpticalParamParameters:   [ [ [ 60,  3, 0.15 ], 
                               	  [ -60, 3, 0.15 ],
                               	  [ 0,   3, 0.15 ] ] ]       
    UseLitePhotons: false 


  }

  LArVoxelCalculator:
  {
    VoxelSizeX:     0.03    #in cm
    VoxelSizeY:     0.03    #in cm
    VoxelSizeZ:     0.03    #in cm
    VoxelSizeT:     5000.0  #in ns
    VoxelOffsetX:   0.0     #in cm
    VoxelOffsetY:   0.0     #in cm
    VoxelOffsetZ:   0.0     #in cm
    VoxelOffsetT:   -2500.0 #in ns
    VoxelEnergyCut: 1.e-6   #in GeV
  }

  #DatabaseUtil:                   @local::microboone_database

  DetectorClocksService:
  {
    service_provider: "DetectorClocksServiceStandard"
  
    TrigModuleName:    ""
    InheritClockConfig: true
    G4RefTime:         0       # G4 time [us] where electronics clock counting start
    TriggerOffsetTPC:  0       # Time offset for TPC readout start time w.r.t. trigger [us]
    FramePeriod:       1638.4  # Frame period [us]; 4096 * 400 ns
    ClockSpeedTPC:     2.5     # TPC clock speed in MHz;
    ClockSpeedOptical: 500     # Optical clock speed in MHz
    ClockSpeedTrigger: 16      # Trigger clock speed in MHz
    ClockSpeedExternal:31.25   # External clock speed in MHz
    DefaultTrigTime:   0       # Default trigger time in electronics clock [us]
    DefaultBeamTime:   0       # Default beam gate time in electronics clock [us]
  }

  MagneticField: @local::no_mag_larsoft

  SpaceCharge:
  {
    service_provider:       SpaceChargeServiceStandard

    EnableSimSpatialSCE:    false
    EnableSimEfieldSCE:    false
    EnableCorrSCE:   false
    RepresentationType:     "Parametric"
    InputFilename:          "SCEoffsets.root"
  }
  
 LArFFT:                         @local::standard_larfft             

 DatabaseUtil:	                 @local::standard_database           

 BackTracker:                    @local::standard_backtracker        

}

icarus_message_services:
{
  debugModules: ["*"]

  destinations: {
    LogDebugFile: { 
      type:       "file"
      filename:   "debug.log"
      append:     false
      threshold:  "DEBUG"
      categories:{
        default:{ limit: 0 }
      }
    }
    LogStandardOut: {
      type:       "cout"
      threshold:  "WARNING"
      categories:{
        default:{ }
      }
    }
    LogStandardError: {
      type:       "cerr"
      threshold:  "ERROR"
      categories:{
        default:{ }
      }
    }
  }
}

icarus_message_services_prod_debug:
{
  debugModules: ["*"]

  destinations: {

  LogDebugFile:      @local::icarus_message_services.destinations.LogDebugFile
  LogStandardOut:    @local::icarus_message_services.destinations.LogStandardOut
  LogStandardError:  @local::icarus_message_services.destinations.LogStandardError
  }
}

icarus_message_services_prod_debug.destinations.LogDebugFile.categories:{
  default: { }
}

icarus_message_services_interactive:
{
  debugModules: ["*"]

  destinations: {

    LogDebugFile:      @local::icarus_message_services.destinations.LogDebugFile
    LogStandardOut:    @local::icarus_message_services.destinations.LogStandardOut
    LogStandardError:  @local::icarus_message_services.destinations.LogStandardError
  }
}
icarus_message_services_interactive.destinations.LogStandardOut.threshold:  "DEBUG"
icarus_message_services_interactive.destinations.LogStandardOut.categories:{
  default: { limit: -1 }
}
icarus_message_services_interactive.destinations.LogStandardError.threshold:  "DEBUG"
icarus_message_services_interactive.destinations.LogStandardError.categories:{
  default: { }
}

icarus_basic_services:
{
  scheduler:    { defaultExceptions: false }    # Make all uncaught exceptions fatal.

  # Load the service that manages root files for histograms.
  TFileService: { fileName: "larg4_hist_icarus.root" }

  TimeTracker:  {}
  MemoryTracker:     { ignoreTotal: 1 } # default is one

  RandomNumberGenerator: {} #ART native random number generator
  #FileCatalogMetadata:  @local::art_file_catalog_mc

  ChannelStatus:         @local::standard_channelstatus
  PedestalRetrieval:     @local::standard_siov_detpedestal_service

  message:               @local::icarus_message_services_interactive

  # Insert LArSoft services ...
  @table::icarus_g4_services
}

END_PROLOG

